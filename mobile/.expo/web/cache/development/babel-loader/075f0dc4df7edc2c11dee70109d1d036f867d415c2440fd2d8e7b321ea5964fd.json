{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/wrapNativeSuper\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nvar API_BASE_URL = 'http://localhost:5001/api';\nvar REQUEST_TIMEOUT = 30000;\nvar ApiError = function (_Error) {\n  function ApiError(message, statusCode) {\n    var _this;\n    _classCallCheck(this, ApiError);\n    _this = _callSuper(this, ApiError, [message]);\n    _this.statusCode = statusCode;\n    _this.name = 'ApiError';\n    return _this;\n  }\n  _inherits(ApiError, _Error);\n  return _createClass(ApiError);\n}(_wrapNativeSuper(Error));\nvar makeRequest = function () {\n  var _ref = _asyncToGenerator(function* (endpoint) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$method = options.method,\n      method = _options$method === void 0 ? 'GET' : _options$method,\n      body = options.body,\n      _options$timeout = options.timeout,\n      timeout = _options$timeout === void 0 ? REQUEST_TIMEOUT : _options$timeout;\n    var controller = new AbortController();\n    var timeoutId = setTimeout(function () {\n      return controller.abort();\n    }, timeout);\n    try {\n      var config = {\n        method: method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        signal: controller.signal\n      };\n      if (body) {\n        config.body = JSON.stringify(body);\n      }\n      console.log(`API Request: ${method} ${API_BASE_URL}${endpoint}`);\n      var response = yield fetch(`${API_BASE_URL}${endpoint}`, config);\n      clearTimeout(timeoutId);\n      if (!response.ok) {\n        var errorMessage = `HTTP ${response.status}: ${response.statusText}`;\n        try {\n          var errorData = yield response.json();\n          errorMessage = errorData.error || errorData.message || errorMessage;\n        } catch (_unused) {}\n        throw new ApiError(errorMessage, response.status);\n      }\n      var data = yield response.json();\n      console.log(`API Response: ${response.status} ${endpoint}`);\n      return data;\n    } catch (error) {\n      clearTimeout(timeoutId);\n      if (error instanceof Error) {\n        if (error.name === 'AbortError') {\n          throw new ApiError('Request timeout - the server took too long to respond');\n        }\n        if (error instanceof ApiError) {\n          throw error;\n        }\n        if (error.message.includes('Network request failed') || error.message.includes('fetch')) {\n          throw new ApiError('Network error - please check your connection and ensure the server is running');\n        }\n        throw new ApiError(error.message || 'An unknown error occurred');\n      } else {\n        throw new ApiError('An unexpected error occurred');\n      }\n    }\n  });\n  return function makeRequest(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var chatApi = {\n  sendMessage: function () {\n    var _sendMessage = _asyncToGenerator(function* (request) {\n      return yield makeRequest('/chat', {\n        method: 'POST',\n        body: request\n      });\n    });\n    function sendMessage(_x2) {\n      return _sendMessage.apply(this, arguments);\n    }\n    return sendMessage;\n  }(),\n  getConversationHistory: function () {\n    var _getConversationHistory = _asyncToGenerator(function* (conversationId) {\n      return yield makeRequest(`/chat/history/${conversationId}`);\n    });\n    function getConversationHistory(_x3) {\n      return _getConversationHistory.apply(this, arguments);\n    }\n    return getConversationHistory;\n  }(),\n  clearConversationHistory: function () {\n    var _clearConversationHistory = _asyncToGenerator(function* (conversationId) {\n      yield makeRequest(`/chat/history/${conversationId}`, {\n        method: 'DELETE'\n      });\n    });\n    function clearConversationHistory(_x4) {\n      return _clearConversationHistory.apply(this, arguments);\n    }\n    return clearConversationHistory;\n  }(),\n  getConversations: function () {\n    var _getConversations = _asyncToGenerator(function* () {\n      return yield makeRequest('/chat/conversations');\n    });\n    function getConversations() {\n      return _getConversations.apply(this, arguments);\n    }\n    return getConversations;\n  }(),\n  getStockData: function () {\n    var _getStockData = _asyncToGenerator(function* (symbol) {\n      return yield makeRequest(`/chat/stock/${symbol}`);\n    });\n    function getStockData(_x5) {\n      return _getStockData.apply(this, arguments);\n    }\n    return getStockData;\n  }(),\n  healthCheck: function () {\n    var _healthCheck = _asyncToGenerator(function* () {\n      return yield makeRequest('/health');\n    });\n    function healthCheck() {\n      return _healthCheck.apply(this, arguments);\n    }\n    return healthCheck;\n  }()\n};\nexport default chatApi;","map":{"version":3,"names":["API_BASE_URL","REQUEST_TIMEOUT","ApiError","_Error","message","statusCode","_this","_classCallCheck","_callSuper","name","_inherits","_createClass","_wrapNativeSuper","Error","makeRequest","_ref","_asyncToGenerator","endpoint","options","arguments","length","undefined","_options$method","method","body","_options$timeout","timeout","controller","AbortController","timeoutId","setTimeout","abort","config","headers","signal","JSON","stringify","console","log","response","fetch","clearTimeout","ok","errorMessage","status","statusText","errorData","json","error","_unused","data","includes","_x","apply","chatApi","sendMessage","_sendMessage","request","_x2","getConversationHistory","_getConversationHistory","conversationId","_x3","clearConversationHistory","_clearConversationHistory","_x4","getConversations","_getConversations","getStockData","_getStockData","symbol","_x5","healthCheck","_healthCheck"],"sources":["C:/chatbot-ts/mobile/src/services/api.ts"],"sourcesContent":["interface ChatRequest {\r\n  message: string;\r\n  conversationId?: string;\r\n  useWebSearch?: boolean;\r\n  maintainHistory?: boolean;\r\n}\r\n\r\ninterface ChatResponse {\r\n  response: string;\r\n  sources: string[];\r\n  conversationId: string;\r\n  timestamp: string;\r\n  usedWebSearch?: boolean;\r\n}\r\n\r\ninterface ConversationHistory {\r\n  conversationId: string;\r\n  messages: Array<{\r\n    role: 'user' | 'assistant';\r\n    content: string;\r\n    timestamp: string;\r\n    sources?: string[];\r\n    usedWebSearch?: boolean;\r\n  }>;\r\n}\r\n\r\ninterface ConversationsResponse {\r\n  conversations: Array<{\r\n    id: string;\r\n    messageCount: number;\r\n    lastActivity: string | null;\r\n  }>;\r\n}\r\n\r\ninterface StockData {\r\n  symbol: string;\r\n  price: string;\r\n  change: string;\r\n  changePercent: string;\r\n  lastUpdated: string;\r\n}\r\n\r\n// Configuration\r\nconst API_BASE_URL = 'http://localhost:5001/api'; // Change this to your server IP for device testing\r\nconst REQUEST_TIMEOUT = 30000; // 30 seconds\r\n\r\nclass ApiError extends Error {\r\n  constructor(message: string, public statusCode?: number) {\r\n    super(message);\r\n    this.name = 'ApiError';\r\n  }\r\n}\r\n\r\nconst makeRequest = async (\r\n  endpoint: string,\r\n  options: {\r\n    method?: 'GET' | 'POST' | 'DELETE';\r\n    body?: object;\r\n    timeout?: number;\r\n  } = {}\r\n): Promise<any> => {\r\n  const { method = 'GET', body, timeout = REQUEST_TIMEOUT } = options;\r\n\r\n  const controller = new AbortController();\r\n  const timeoutId = setTimeout(() => controller.abort(), timeout);\r\n\r\n  try {\r\n    const config: RequestInit = {\r\n      method,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      signal: controller.signal,\r\n    };\r\n\r\n    if (body) {\r\n      config.body = JSON.stringify(body);\r\n    }\r\n\r\n    console.log(`API Request: ${method} ${API_BASE_URL}${endpoint}`);\r\n\r\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, config);\r\n\r\n    clearTimeout(timeoutId);\r\n\r\n    if (!response.ok) {\r\n      let errorMessage = `HTTP ${response.status}: ${response.statusText}`;\r\n      \r\n      try {\r\n        const errorData = await response.json();\r\n        errorMessage = errorData.error || errorData.message || errorMessage;\r\n      } catch {\r\n        // Use the default error message if JSON parsing fails\r\n      }\r\n      \r\n      throw new ApiError(errorMessage, response.status);\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log(`API Response: ${response.status} ${endpoint}`);\r\n    return data;\r\n\r\n  } catch (error: unknown) {\r\n  clearTimeout(timeoutId);\r\n\r\n  if (error instanceof Error) {\r\n    if (error.name === 'AbortError') {\r\n      throw new ApiError('Request timeout - the server took too long to respond');\r\n    }\r\n\r\n    if (error instanceof ApiError) {\r\n      throw error;\r\n    }\r\n\r\n    if (\r\n      error.message.includes('Network request failed') ||\r\n      error.message.includes('fetch')\r\n    ) {\r\n      throw new ApiError('Network error - please check your connection and ensure the server is running');\r\n    }\r\n\r\n    throw new ApiError(error.message || 'An unknown error occurred');\r\n  } else {\r\n    // Handle non-Error throwables (rare, but possible)\r\n    throw new ApiError('An unexpected error occurred');\r\n  }\r\n}\r\n};\r\n\r\nexport const chatApi = {\r\n  // Send a chat message\r\n  sendMessage: async (request: ChatRequest): Promise<ChatResponse> => {\r\n    return await makeRequest('/chat', {\r\n      method: 'POST',\r\n      body: request,\r\n    });\r\n  },\r\n\r\n  // Get conversation history\r\n  getConversationHistory: async (conversationId: string): Promise<ConversationHistory> => {\r\n    return await makeRequest(`/chat/history/${conversationId}`);\r\n  },\r\n\r\n  // Clear conversation history\r\n  clearConversationHistory: async (conversationId: string): Promise<void> => {\r\n    await makeRequest(`/chat/history/${conversationId}`, {\r\n      method: 'DELETE',\r\n    });\r\n  },\r\n\r\n  // Get all conversations\r\n  getConversations: async (): Promise<ConversationsResponse> => {\r\n    return await makeRequest('/chat/conversations');\r\n  },\r\n\r\n  // Get stock data (bonus feature)\r\n  getStockData: async (symbol: string): Promise<StockData> => {\r\n    return await makeRequest(`/chat/stock/${symbol}`);\r\n  },\r\n\r\n  // Health check\r\n  healthCheck: async (): Promise<{ status: string; timestamp: string }> => {\r\n    return await makeRequest('/health');\r\n  }\r\n};\r\n\r\nexport default chatApi;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}